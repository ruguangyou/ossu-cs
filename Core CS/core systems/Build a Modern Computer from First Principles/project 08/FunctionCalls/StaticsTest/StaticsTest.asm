//function Sys.init 0
(Sys.init)
//push constant 6
@6
D=A
@SP
AM=M+1
A=A-1
M=D
//push constant 8
@8
D=A
@SP
AM=M+1
A=A-1
M=D
//call Class1.set 2
@Class1.set$ret.1
D=A
@SP
AM=M+1
A=A-1
M=D
@LCL
D=M
@SP
AM=M+1
A=A-1
M=D
@ARG
D=M
@SP
AM=M+1
A=A-1
M=D
@THIS
D=M
@SP
AM=M+1
A=A-1
M=D
@THAT
D=M
@SP
AM=M+1
A=A-1
M=D
@SP
D=M
@LCL
M=D
@SP
D=M
@SP
AM=M+1
A=A-1
M=D
@7
D=A
@SP
AM=M+1
A=A-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
D=M
@ARG
M=D
@Class1.set
0;JMP
(Class1.set$ret.1)
//pop temp 0
@0
D=A
@5
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
//push constant 23
@23
D=A
@SP
AM=M+1
A=A-1
M=D
//push constant 15
@15
D=A
@SP
AM=M+1
A=A-1
M=D
//call Class2.set 2
@Class2.set$ret.2
D=A
@SP
AM=M+1
A=A-1
M=D
@LCL
D=M
@SP
AM=M+1
A=A-1
M=D
@ARG
D=M
@SP
AM=M+1
A=A-1
M=D
@THIS
D=M
@SP
AM=M+1
A=A-1
M=D
@THAT
D=M
@SP
AM=M+1
A=A-1
M=D
@SP
D=M
@LCL
M=D
@SP
D=M
@SP
AM=M+1
A=A-1
M=D
@7
D=A
@SP
AM=M+1
A=A-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
D=M
@ARG
M=D
@Class2.set
0;JMP
(Class2.set$ret.2)
//pop temp 0
@0
D=A
@5
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
//call Class1.get 0
@Class1.get$ret.3
D=A
@SP
AM=M+1
A=A-1
M=D
@LCL
D=M
@SP
AM=M+1
A=A-1
M=D
@ARG
D=M
@SP
AM=M+1
A=A-1
M=D
@THIS
D=M
@SP
AM=M+1
A=A-1
M=D
@THAT
D=M
@SP
AM=M+1
A=A-1
M=D
@SP
D=M
@LCL
M=D
@SP
D=M
@SP
AM=M+1
A=A-1
M=D
@5
D=A
@SP
AM=M+1
A=A-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
D=M
@ARG
M=D
@Class1.get
0;JMP
(Class1.get$ret.3)
//call Class2.get 0
@Class2.get$ret.4
D=A
@SP
AM=M+1
A=A-1
M=D
@LCL
D=M
@SP
AM=M+1
A=A-1
M=D
@ARG
D=M
@SP
AM=M+1
A=A-1
M=D
@THIS
D=M
@SP
AM=M+1
A=A-1
M=D
@THAT
D=M
@SP
AM=M+1
A=A-1
M=D
@SP
D=M
@LCL
M=D
@SP
D=M
@SP
AM=M+1
A=A-1
M=D
@5
D=A
@SP
AM=M+1
A=A-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
D=M
@ARG
M=D
@Class2.get
0;JMP
(Class2.get$ret.4)
//label WHILE
(WHILE)
//goto WHILE
@WHILE
0;JMP
//function Class1.set 0
(Class1.set)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
AM=M+1
A=A-1
M=D
//pop static 0
@SP
AM=M-1
D=M
@StaticsTest.Class1.0
M=D
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
AM=M+1
A=A-1
M=D
//pop static 1
@SP
AM=M-1
D=M
@StaticsTest.Class1.1
M=D
//push constant 0
@0
D=A
@SP
AM=M+1
A=A-1
M=D
//return
@ARG
D=M+1
@tempSP
M=D
@SP
AM=M-1
D=M
@retValue
M=D
@LCL
D=M
@SP
M=D
@SP
AM=M-1
D=M
@THAT
M=D
@SP
AM=M-1
D=M
@THIS
M=D
@SP
AM=M-1
D=M
@ARG
M=D
@SP
AM=M-1
D=M
@LCL
M=D
@SP
AM=M-1
D=M
@retAddr
M=D
@tempSP
D=M
@SP
M=D
@retValue
D=M
@SP
A=M-1
M=D
@retAddr
A=M
0;JMP
//function Class1.get 0
(Class1.get)
//push static 0
@StaticsTest.Class1.0
D=M
@SP
AM=M+1
A=A-1
M=D
//push static 1
@StaticsTest.Class1.1
D=M
@SP
AM=M+1
A=A-1
M=D
//sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
//return
@ARG
D=M+1
@tempSP
M=D
@SP
AM=M-1
D=M
@retValue
M=D
@LCL
D=M
@SP
M=D
@SP
AM=M-1
D=M
@THAT
M=D
@SP
AM=M-1
D=M
@THIS
M=D
@SP
AM=M-1
D=M
@ARG
M=D
@SP
AM=M-1
D=M
@LCL
M=D
@SP
AM=M-1
D=M
@retAddr
M=D
@tempSP
D=M
@SP
M=D
@retValue
D=M
@SP
A=M-1
M=D
@retAddr
A=M
0;JMP
//function Class2.set 0
(Class2.set)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
AM=M+1
A=A-1
M=D
//pop static 0
@SP
AM=M-1
D=M
@StaticsTest.Class2.0
M=D
//push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
AM=M+1
A=A-1
M=D
//pop static 1
@SP
AM=M-1
D=M
@StaticsTest.Class2.1
M=D
//push constant 0
@0
D=A
@SP
AM=M+1
A=A-1
M=D
//return
@ARG
D=M+1
@tempSP
M=D
@SP
AM=M-1
D=M
@retValue
M=D
@LCL
D=M
@SP
M=D
@SP
AM=M-1
D=M
@THAT
M=D
@SP
AM=M-1
D=M
@THIS
M=D
@SP
AM=M-1
D=M
@ARG
M=D
@SP
AM=M-1
D=M
@LCL
M=D
@SP
AM=M-1
D=M
@retAddr
M=D
@tempSP
D=M
@SP
M=D
@retValue
D=M
@SP
A=M-1
M=D
@retAddr
A=M
0;JMP
//function Class2.get 0
(Class2.get)
//push static 0
@StaticsTest.Class2.0
D=M
@SP
AM=M+1
A=A-1
M=D
//push static 1
@StaticsTest.Class2.1
D=M
@SP
AM=M+1
A=A-1
M=D
//sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
//return
@ARG
D=M+1
@tempSP
M=D
@SP
AM=M-1
D=M
@retValue
M=D
@LCL
D=M
@SP
M=D
@SP
AM=M-1
D=M
@THAT
M=D
@SP
AM=M-1
D=M
@THIS
M=D
@SP
AM=M-1
D=M
@ARG
M=D
@SP
AM=M-1
D=M
@LCL
M=D
@SP
AM=M-1
D=M
@retAddr
M=D
@tempSP
D=M
@SP
M=D
@retValue
D=M
@SP
A=M-1
M=D
@retAddr
A=M
0;JMP
