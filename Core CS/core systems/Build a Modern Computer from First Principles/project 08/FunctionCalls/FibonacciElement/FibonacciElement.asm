//function Sys.init 0
(Sys.init)
//push constant 4
@4
D=A
@SP
AM=M+1
A=A-1
M=D
//call Main.fibonacci 1
@Main.fibonacci$ret.1
D=A
@SP
AM=M+1
A=A-1
M=D
@LCL
D=M
@SP
AM=M+1
A=A-1
M=D
@ARG
D=M
@SP
AM=M+1
A=A-1
M=D
@THIS
D=M
@SP
AM=M+1
A=A-1
M=D
@THAT
D=M
@SP
AM=M+1
A=A-1
M=D
@SP
D=M
@LCL
M=D
@SP
D=M
@SP
AM=M+1
A=A-1
M=D
@6
D=A
@SP
AM=M+1
A=A-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
D=M
@ARG
M=D
@Main.fibonacci
0;JMP
(Main.fibonacci$ret.1)
//label WHILE
(WHILE)
//goto WHILE
@WHILE
0;JMP
//function Main.fibonacci 0
(Main.fibonacci)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
AM=M+1
A=A-1
M=D
//push constant 2
@2
D=A
@SP
AM=M+1
A=A-1
M=D
//lt
@SP
AM=M-1
D=M
A=A-1
D=M-D
@X
D;JLT
@0
D=A
@Y
0;JMP
(X)
@1
D=A
(Y)
@SP
A=M-1
M=D
//if-goto IF_TRUE
@SP
AM=M-1
D=M
@IF_TRUE
D;JGT
//goto IF_FALSE
@IF_FALSE
0;JMP
//label IF_TRUE
(IF_TRUE)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
AM=M+1
A=A-1
M=D
//return
@ARG
D=M+1
@tempSP
M=D
@SP
AM=M-1
D=M
@retValue
M=D
@LCL
D=M
@SP
M=D
@SP
AM=M-1
D=M
@THAT
M=D
@SP
AM=M-1
D=M
@THIS
M=D
@SP
AM=M-1
D=M
@ARG
M=D
@SP
AM=M-1
D=M
@LCL
M=D
@SP
AM=M-1
D=M
@retAddr
M=D
@tempSP
D=M
@SP
M=D
@retValue
D=M
@SP
A=M-1
M=D
@retAddr
A=M
0;JMP
//label IF_FALSE
(IF_FALSE)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
AM=M+1
A=A-1
M=D
//push constant 2
@2
D=A
@SP
AM=M+1
A=A-1
M=D
//sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
//call Main.fibonacci 1
@Main.fibonacci$ret.2
D=A
@SP
AM=M+1
A=A-1
M=D
@LCL
D=M
@SP
AM=M+1
A=A-1
M=D
@ARG
D=M
@SP
AM=M+1
A=A-1
M=D
@THIS
D=M
@SP
AM=M+1
A=A-1
M=D
@THAT
D=M
@SP
AM=M+1
A=A-1
M=D
@SP
D=M
@LCL
M=D
@SP
D=M
@SP
AM=M+1
A=A-1
M=D
@6
D=A
@SP
AM=M+1
A=A-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
D=M
@ARG
M=D
@Main.fibonacci
0;JMP
(Main.fibonacci$ret.2)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
AM=M+1
A=A-1
M=D
//push constant 1
@1
D=A
@SP
AM=M+1
A=A-1
M=D
//sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
//call Main.fibonacci 1
@Main.fibonacci$ret.3
D=A
@SP
AM=M+1
A=A-1
M=D
@LCL
D=M
@SP
AM=M+1
A=A-1
M=D
@ARG
D=M
@SP
AM=M+1
A=A-1
M=D
@THIS
D=M
@SP
AM=M+1
A=A-1
M=D
@THAT
D=M
@SP
AM=M+1
A=A-1
M=D
@SP
D=M
@LCL
M=D
@SP
D=M
@SP
AM=M+1
A=A-1
M=D
@6
D=A
@SP
AM=M+1
A=A-1
M=D
@SP
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
D=M
@ARG
M=D
@Main.fibonacci
0;JMP
(Main.fibonacci$ret.3)
//add
@SP
AM=M-1
D=M
A=A-1
M=M+D
//return
@ARG
D=M+1
@tempSP
M=D
@SP
AM=M-1
D=M
@retValue
M=D
@LCL
D=M
@SP
M=D
@SP
AM=M-1
D=M
@THAT
M=D
@SP
AM=M-1
D=M
@THIS
M=D
@SP
AM=M-1
D=M
@ARG
M=D
@SP
AM=M-1
D=M
@LCL
M=D
@SP
AM=M-1
D=M
@retAddr
M=D
@tempSP
D=M
@SP
M=D
@retValue
D=M
@SP
A=M-1
M=D
@retAddr
A=M
0;JMP
