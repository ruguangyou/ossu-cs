// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
	static int scan;
	static char zero;
	static char negSign;
	
    /** Initializes the keyboard. */
    function void init() {
		let scan = 24576;
		let zero = 48;
		let negSign = 45;
		return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
		return Memory.peek(scan);
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
		var char c;
		while(Keyboard.keyPressed() = 0){}
		let c = Keyboard.keyPressed();
		while(~(Keyboard.keyPressed() = 0)){}
		do Output.printChar(c);
		return c;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
		var String str;
		var char c;
		let str = String.new(80);
		do Output.printString(message);
		let c = Keyboard.readChar();
		while(~(c = String.newLine())){
			if(c = String.backSpace()){
				do str.eraseLastChar();
				do Output.backSpace();
			}
			else{
				do str.appendChar(c);
			}
			let c = Keyboard.readChar();
		}
		do Output.println();
		return str;
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
		var String s;
		var char c;
		var int sum, i, len, sign;
		let s = Keyboard.readLine(message);
		let sum = 0;
		let i = 0;
		let len = s.length();
		let sign = 1;
		while(i < len){
			let c = s.charAt(i);
			if(c = negSign){
				let sign = -1;
			}
			else{
				let sum = (sum*10) + (c-zero);
			}
			let i = i + 1;
		}
		return (sign*sum);
	}
}
